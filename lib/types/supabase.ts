// This file will be auto-generated by Supabase CLI
// For now, we'll create a basic type structure
// Run: npx supabase gen types typescript --project-id "your-project-id" > lib/types/supabase.ts

export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[]

export interface Database {
  public: {
    Tables: {
      profiles: {
        Row: {
          user_id: string
          full_name: string | null
          city: string | null
          msa_status: 'live' | 'waitlist'
          survey_complete: boolean
          created_at: string
        }
        Insert: {
          user_id: string
          full_name?: string | null
          city?: string | null
          msa_status?: 'live' | 'waitlist'
          survey_complete?: boolean
          created_at?: string
        }
        Update: {
          user_id?: string
          full_name?: string | null
          city?: string | null
          msa_status?: 'live' | 'waitlist'
          survey_complete?: boolean
          created_at?: string
        }
      }
      partnerships: {
        Row: {
          id: string
          owner_id: string
          city: string | null
          membership_tier: 'free' | 'plus' | 'select'
          created_at: string
        }
        Insert: {
          id?: string
          owner_id: string
          city?: string | null
          membership_tier?: 'free' | 'plus' | 'select'
          created_at?: string
        }
        Update: {
          id?: string
          owner_id?: string
          city?: string | null
          membership_tier?: 'free' | 'plus' | 'select'
          created_at?: string
        }
      }
      survey_responses: {
        Row: {
          partnership_id: string
          answers_json: Json
          completion_pct: number
          updated_at: string
        }
        Insert: {
          partnership_id: string
          answers_json?: Json
          completion_pct?: number
          updated_at?: string
        }
        Update: {
          partnership_id?: string
          answers_json?: Json
          completion_pct?: number
          updated_at?: string
        }
      }
      city_status: {
        Row: {
          city: string
          is_live: boolean
        }
        Insert: {
          city: string
          is_live: boolean
        }
        Update: {
          city?: string
          is_live?: boolean
        }
      }
    }
    Views: {
      [_ in never]: never
    }
    Functions: {
      [_ in never]: never
    }
    Enums: {
      membership_tier: 'free' | 'plus' | 'select'
      city_status: 'live' | 'waitlist'
      partnership_status: 'active' | 'pending' | 'inactive'
    }
  }
}